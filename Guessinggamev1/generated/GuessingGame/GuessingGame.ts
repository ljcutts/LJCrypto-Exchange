// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CurrentGame extends ethereum.Event {
  get params(): CurrentGame__Params {
    return new CurrentGame__Params(this);
  }
}

export class CurrentGame__Params {
  _event: CurrentGame;

  constructor(event: CurrentGame) {
    this._event = event;
  }

  get Player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get GameId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Ended extends ethereum.Event {
  get params(): Ended__Params {
    return new Ended__Params(this);
  }
}

export class Ended__Params {
  _event: Ended;

  constructor(event: Ended) {
    this._event = event;
  }

  get Player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get GameId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Winners extends ethereum.Event {
  get params(): Winners__Params {
    return new Winners__Params(this);
  }
}

export class Winners__Params {
  _event: Winners;

  constructor(event: Winners) {
    this._event = event;
  }

  get Winner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get requestId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get GameId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GuessingGame extends ethereum.SmartContract {
  static bind(address: Address): GuessingGame {
    return new GuessingGame("GuessingGame", address);
  }

  alreadyEntered(param0: Address): boolean {
    let result = super.call(
      "alreadyEntered",
      "alreadyEntered(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_alreadyEntered(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "alreadyEntered",
      "alreadyEntered(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  alreadyGuessed(param0: Address): boolean {
    let result = super.call(
      "alreadyGuessed",
      "alreadyGuessed(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_alreadyGuessed(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "alreadyGuessed",
      "alreadyGuessed(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  currentGameId(): BigInt {
    let result = super.call("currentGameId", "currentGameId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentGameId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentGameId",
      "currentGameId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  didYouGuess(): boolean {
    let result = super.call("didYouGuess", "didYouGuess():(bool)", []);

    return result[0].toBoolean();
  }

  try_didYouGuess(): ethereum.CallResult<boolean> {
    let result = super.tryCall("didYouGuess", "didYouGuess():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nonce(): BigInt {
    let result = super.call("nonce", "nonce():(uint128)", []);

    return result[0].toBigInt();
  }

  try_nonce(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonce", "nonce():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberAboveZero(): boolean {
    let result = super.call("numberAboveZero", "numberAboveZero():(bool)", []);

    return result[0].toBoolean();
  }

  try_numberAboveZero(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "numberAboveZero",
      "numberAboveZero():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class EnterGuessingGameCall extends ethereum.Call {
  get inputs(): EnterGuessingGameCall__Inputs {
    return new EnterGuessingGameCall__Inputs(this);
  }

  get outputs(): EnterGuessingGameCall__Outputs {
    return new EnterGuessingGameCall__Outputs(this);
  }
}

export class EnterGuessingGameCall__Inputs {
  _call: EnterGuessingGameCall;

  constructor(call: EnterGuessingGameCall) {
    this._call = call;
  }
}

export class EnterGuessingGameCall__Outputs {
  _call: EnterGuessingGameCall;

  constructor(call: EnterGuessingGameCall) {
    this._call = call;
  }
}

export class GuessTheNumberValueCall extends ethereum.Call {
  get inputs(): GuessTheNumberValueCall__Inputs {
    return new GuessTheNumberValueCall__Inputs(this);
  }

  get outputs(): GuessTheNumberValueCall__Outputs {
    return new GuessTheNumberValueCall__Outputs(this);
  }
}

export class GuessTheNumberValueCall__Inputs {
  _call: GuessTheNumberValueCall;

  constructor(call: GuessTheNumberValueCall) {
    this._call = call;
  }

  get guess(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class GuessTheNumberValueCall__Outputs {
  _call: GuessTheNumberValueCall;

  constructor(call: GuessTheNumberValueCall) {
    this._call = call;
  }
}

export class RawFulfillRandomnessCall extends ethereum.Call {
  get inputs(): RawFulfillRandomnessCall__Inputs {
    return new RawFulfillRandomnessCall__Inputs(this);
  }

  get outputs(): RawFulfillRandomnessCall__Outputs {
    return new RawFulfillRandomnessCall__Outputs(this);
  }
}

export class RawFulfillRandomnessCall__Inputs {
  _call: RawFulfillRandomnessCall;

  constructor(call: RawFulfillRandomnessCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get randomness(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RawFulfillRandomnessCall__Outputs {
  _call: RawFulfillRandomnessCall;

  constructor(call: RawFulfillRandomnessCall) {
    this._call = call;
  }
}

export class TimeIsUpCall extends ethereum.Call {
  get inputs(): TimeIsUpCall__Inputs {
    return new TimeIsUpCall__Inputs(this);
  }

  get outputs(): TimeIsUpCall__Outputs {
    return new TimeIsUpCall__Outputs(this);
  }
}

export class TimeIsUpCall__Inputs {
  _call: TimeIsUpCall;

  constructor(call: TimeIsUpCall) {
    this._call = call;
  }
}

export class TimeIsUpCall__Outputs {
  _call: TimeIsUpCall;

  constructor(call: TimeIsUpCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
